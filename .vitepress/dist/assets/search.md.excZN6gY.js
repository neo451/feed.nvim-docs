import{_ as a,c as o,ae as t,o as i}from"./chunks/framework.BzDBnRMZ.js";const m=JSON.parse('{"title":"Search","description":"","frontmatter":{},"headers":[],"relativePath":"search.md","filePath":"search.md","lastUpdated":1741424274000}'),l={name:"search.md"};function r(s,e,d,n,c,h){return i(),o("div",null,e[0]||(e[0]=[t('<h1 id="search" tabindex="-1">Search <a class="header-anchor" href="#search" aria-label="Permalink to &quot;Search&quot;">​</a></h1><ul><li>use <code>Feed search</code> to filter your feeds</li><li>you can also pass the query like <code>Feed =neovim +read</code></li><li>the default query when you open up the index buffer is <code>+unread @2-weeks-ago</code></li></ul><h2 id="regex" tabindex="-1">Regex <a class="header-anchor" href="#regex" aria-label="Permalink to &quot;Regex&quot;">​</a></h2><ul><li>no modifier matches entry title or entry url</li><li><code>!</code> is negative match with entry title or url</li><li><code>=</code> is matching feed name and feed url</li><li><code>~</code> is not matching feed name and feed url</li><li>these all respect your <code>ignorecase</code> option</li></ul><h2 id="tags" tabindex="-1">Tags <a class="header-anchor" href="#tags" aria-label="Permalink to &quot;Tags&quot;">​</a></h2><ul><li><code>+</code> means <code>must_have</code>, searches entries&#39; tags</li><li><code>-</code> means <code>must_not_have</code>, searches entries&#39; tags</li></ul><h2 id="date" tabindex="-1">Date <a class="header-anchor" href="#date" aria-label="Permalink to &quot;Date&quot;">​</a></h2><ul><li><code>@</code> means <code>date</code>, searches entries&#39; date</li><li><code>2015-8-10</code> searches only entries after the date</li><li><code>2-months-ago</code> searches only entries within two months from now</li><li><code>1-year-ago--6-months-ago</code> means entries in the period</li></ul><h2 id="limit" tabindex="-1">Limit <a class="header-anchor" href="#limit" aria-label="Permalink to &quot;Limit&quot;">​</a></h2><ul><li><code>#</code> means <code>limit</code>, limits the number of entries</li></ul><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><ul><li><code>+blog +unread -star @6-months-ago #10 zig !rust</code></li></ul><p>Only Shows 10 entries with tags blog and unread, without tag star, and are published within 6 month, making sure they have zig but not rust in the title.</p><ul><li><code>@6-months-ago +unread</code></li></ul><p>Only show unread entries of the last six months. This is the default filter.</p><ul><li><code>linu[xs] @1-year-old</code></li></ul><p>Only show entries about Linux or Linus from the last year.</p><ul><li><code>-unread +youtube #10</code></li></ul><p>Only show the most recent 10 previously-read entries tagged as youtube.</p><ul><li><code>+unread !n\\=vim</code></li></ul><p>Only show unread entries not having vim or nvim in the title or link.</p><ul><li><code>+emacs =http://example.org/feed/</code></li></ul><p>Only show entries tagged as emacs from a specific feed.</p><h2 id="grep" tabindex="-1">Grep <a class="header-anchor" href="#grep" aria-label="Permalink to &quot;Grep&quot;">​</a></h2><p>Use <code>Feed grep</code> to live grep all entries in your database, requires <code>rg</code> and one of the search backends:</p><ul><li><code>telescope</code></li><li><code>fzf-lua</code></li><li><code>mini.pick</code></li></ul>',26)]))}const p=a(l,[["render",r]]);export{m as __pageData,p as default};
